# Copyright (c) 2016, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
classes:
  - wso2das
wso2::pack_filename: "%{::product_name}-%{::product_version}.zip"
wso2::pack_extracted_dir: "%{::product_name}-%{::product_version}"

wso2::service_name: wso2das
wso2::hostname: das.dev.wso2.org
wso2::mgt_hostname: das.dev.wso2.org

wso2::file_list:
  - dbscripts/identity/h2.sql
  - dbscripts/identity/mysql.sql
#  - "repository/components/lib/%{hiera('wso2::datasources::mysql::connector_jar')}"

wso2::template_list:
  - repository/conf/datasources/analytics-datasources.xml
  - repository/conf/jndi.properties
  - repository/conf/analytics/spark/spark-defaults.conf
#  - repository/conf/security/cipher-text.properties
#  - repository/conf/security/cipher-tool.properties
#  - bin/ciphertool.sh
#  - password-tmp

wso2::directory_list:
  - dbscripts/identity

wso2::spark_master_count: 1

wso2::clustering:
  enabled: false
  local_member_host: "%{::ipaddress}"
  local_member_port: 4000
  domain: das.wso2.domain
  membership_scheme: wka
  wka:
    members:
      -
        hostname: 192.168.100.61
        port: 4000
      -
        hostname: 192.168.100.62
        port: 4001

#wso2::usermgt_datasource: wso2_user_db
wso2::is_datasource: wso2_carbon_db

#wso2::master_datasources:
#  wso2_config_db:
#    name: WSO2_CONFIG_DB
#    description: The datasource used for config registry
#    driver_class_name: com.mysql.jdbc.Driver
#    url: jdbc:mysql://192.168.100.1:3306/WSO2REG_DB?autoReconnect=true
#    username: "%{hiera('wso2::datasources::mysql::username')}"
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#    jndi_config: jdbc/WSO2_CONFIG_DB
#    max_active: "%{hiera('wso2::datasources::common::max_active')}"
#    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
#    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
#    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
#    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
#    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"
#
#  wso2_gov_db:
#    name: WSO2_GOV_DB
#    description: The datasource used for gov registry
#    driver_class_name: com.mysql.jdbc.Driver
#    url: jdbc:mysql://192.168.100.1:3306/WSO2REG_DB?autoReconnect=true
#    username: "%{hiera('wso2::datasources::mysql::username')}"
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#    jndi_config: jdbc/WSO2_GOV_DB
#    max_active: "%{hiera('wso2::datasources::common::max_active')}"
#    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
#    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
#    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
#    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
#    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"
#
#  wso2_user_db:
#    name: WSO2_USER_DB
#    description: The datasource is used for user mangement and userstore
#    driver_class_name: com.mysql.jdbc.Driver
#    url: jdbc:mysql://192.168.100.1:3306/WSO2USER_DB?autoReconnect=true
#    username: "%{hiera('wso2::datasources::mysql::username')}"
#    password: "%{hiera('wso2::datasources::mysql::password')}"
#    jndi_config: jdbc/WSO2USER_DB
#    max_active: "%{hiera('wso2::datasources::common::max_active')}"
#    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
#    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
#    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
#    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
#    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

wso2::analytics_datasources:
  wso2_analytics_fs_db:
    name: WSO2_ANALYTICS_FS_DB
    description: The datasource used for analytics file system
    driver_class_name: org.h2.Driver
    url: jdbc:h2:repository/database/ANALYTICS_FS_DB;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000
    username: "%{hiera('wso2::datasources::common::username')}"
    password: "%{hiera('wso2::datasources::common::password')}"
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"
    default_auto_commit: false
    initial_size: 0
    test_while_idle: true
    min_evictable_idle_time_millis: 4000

  wso2_analytics_event_store_db:
    name: WSO2_ANALYTICS_EVENT_STORE_DB
    description: The datasource used for analytics record store
    driver_class_name: org.h2.Driver
    url: jdbc:h2:repository/database/ANALYTICS_EVENT_STORE;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000
    username: "%{hiera('wso2::datasources::common::username')}"
    password: "%{hiera('wso2::datasources::common::password')}"
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"
    default_auto_commit: false
    initial_size: 0
    test_while_idle: true
    min_evictable_idle_time_millis: 4000

  wso2_analytics_processed_data_store_db:
    name: WSO2_ANALYTICS_PROCESSED_DATA_STORE_DB
    description: The datasource used for analytics record store
    driver_class_name: org.h2.Driver
    url: jdbc:h2:repository/database/ANALYTICS_PROCESSED_DATA_STORE;AUTO_SERVER=TRUE;DB_CLOSE_ON_EXIT=FALSE;LOCK_TIMEOUT=60000
    username: "%{hiera('wso2::datasources::common::username')}"
    password: "%{hiera('wso2::datasources::common::password')}"
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"
    default_auto_commit: false
    initial_size: 0
    test_while_idle: true
    min_evictable_idle_time_millis: 4000

wso2::metrics_datasources:
  wso2_metrics_db:
    name: WSO2_METRICS_DB
    description: The default datasource used for WSO2 Carbon Metrics
    driver_class_name: org.h2.Driver
    url: jdbc:h2:repository/database/WSO2METRICS_DB;DB_CLOSE_ON_EXIT=FALSE;AUTO_SERVER=TRUE
    jndi_config: jdbc/WSO2MetricsDB
    username: "%{hiera('wso2::datasources::common::username')}"
    password: "%{hiera('wso2::datasources::common::password')}"
    max_active: "%{hiera('wso2::datasources::common::max_active')}"
    max_wait: "%{hiera('wso2::datasources::common::max_wait')}"
    test_on_borrow: "%{hiera('wso2::datasources::common::test_on_borrow')}"
    default_auto_commit: "%{hiera('wso2::datasources::common::default_auto_commit')}"
    validation_query: "%{hiera('wso2::datasources::mysql::validation_query')}"
    validation_interval: "%{hiera('wso2::datasources::common::validation_interval')}"

# Secure vault configuration
#wso2::enable_secure_vault: true
#wso2::secure_vault_configs:
#  key_store_password:
#    secret_alias: Carbon.Security.KeyStore.Password
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/KeyStore/Password,false
#    password: wso2carbon
#
#  key_store_key_password:
#    secret_alias: Carbon.Security.KeyStore.KeyPassword
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/KeyStore/KeyPassword,false
#    password: wso2carbon
#
#  trust_store_password:
#    secret_alias: Carbon.Security.TrustStore.Password
#    secret_alias_value: repository/conf/carbon.xml//Server/Security/TrustStore/Password,false
#    password: wso2carbon
#
#  user_manager_admin_password:
#    secret_alias: UserManager.AdminUser.Password
#    secret_alias_value: repository/conf/user-mgt.xml//UserManager/Realm/Configuration/AdminUser/Password,false
#    password: admin
#
#  wso2_carbon_db_password:
#    secret_alias: Datasources.WSO2_CARBON_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_CARBON_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: wso2carbon
#
#  connector_key_store_password:
#    secret_alias: Server.Service.Connector.keystorePass
#    secret_alias_value: repository/conf/tomcat/catalina-server.xml//Server/Service/Connector[@keystorePass],true
#    password: wso2carbon
#
#  wso2_analytics_event_store_db_password:
#    secret_alias: Datasources.WSO2_ANALYTICS_EVENT_STORE_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/analytics-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_ANALYTICS_EVENT_STORE_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: wso2carbon
#
#  wso2_analytics_processed_data_store_db_password:
#    secret_alias: Datasources.WSO2_ANALYTICS_PROCESSED_DATA_STORE_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/analytics-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_ANALYTICS_PROCESSED_DATA_STORE_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: wso2carbon
#
#  wso2_metrics_db_password:
#    secret_alias: Datasources.WSO2_METRICS_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/metrics-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_METRICS_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: wso2carbon
#
#  wso2_config_db_password:
#    secret_alias: Datasources.WSO2_CONFIG_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_CONFIG_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: wso2carbon
#
#  wso2_gov_db_password:
#    secret_alias: Datasources.WSO2_GOV_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_GOV_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: wso2carbon
#
#  wso2_user_db_password:
#    secret_alias: Datasources.WSO2_USER_DB.Configuration.Password
#    secret_alias_value: repository/conf/datasources/master-datasources.xml//datasources-configuration/datasources/datasource[name='WSO2_USER_DB']/definition[@type='RDBMS']/configuration/password,false
#    password: wso2carbon
#
##Use below advanced secure vault configurations if the properties are used in corresponding files
#  analytics_data_config_password:
#    secret_alias: Analytics.Data.Config.Password
#    secret_alias_value: repository/conf/analytics/analytics-data-config.xml//AnalyticsDataConfiguration/Password,false
#    password: wso2carbon
#  analytics_data_config_trust_store_password:
#    secret_alias: Analytics.Data.Config.TrustStorePassword
#    secret_alias_value: repository/conf/analytics/analytics-data-config.xml//AnalyticsDataConfiguration/TrustStorePassword,false
#    password: wso2carbon
#  dep_sync_svn_password:
#    secret_alias: Carbon.DeploymentSynchronizer.SvnPassword
#    secret_alias_value: repository/conf/carbon.xml//Sever/DeploymentSynchronizer/SvnPassword,false
#    password: password
#  user_store_manager_connection_password:
#    secret_alias: UserStoreManager.Property.ConnectionPassword
#    secret_alias_value: repository/conf/user-mgt.xml//UserManager/Realm/UserStoreManager/Property[@name='ConnectionPassword'],flase
#    password: admin
#  user_store_manager_password:
#    secret_alias: UserStoreManager.Property.password
#    secret_alias_value: repository/conf/user-mgt.xml//UserManager/Realm/UserStoreManager/Property[@name='password'],false
#    password: admin
#  user_trusted_RPStore_password:
#    secret_alias: Security.UserTrustedRPStore.Password
#    secret_alias_value: repository/conf/identity.xml//Server/Security/UserTrustedRPStore/Password,false
#    password: wso2carbon
#  user_trusted_RPStore_key_password:
#    secret_alias: Security.UserTrustedRPStore.KeyPassword
#    secret_alias_value: repository/conf/identity.xml//Server/Security/UserTrustedRPStore/KeyPassword,false
#    password: wso2carbon
#  identity_system_store_pass:
#    secret_alias: Identity.System.StorePass
#    secret_alias_value: repository/conf/identity.xml//Server/Identity/System/StorePass,false
#    password: wso2carbon
#  xmpp_password:
#    secret_alias: MultifactorAuthentication.XMPPSettings.XMPPConfig.XMPPPassword
#    secret_alias_value: repository/conf/identity.xml//MultifactorAuthentication/XMPPSettings/XMPPConfig/XMPPPassword,false
#    password: wso2carbon
#  axis2_https_listener_trust_store_password:
#    secret_alias: Axis2.Https.Listener.TrustStore.Password
#    secret_alias_value: repository/conf/axis2/axis2.xml//axisconfig/transportReceiver[@name='https']/parameter[@name='truststore']/TrustStore/Password,false
#    password: wso2carbon
#  axis2_https_listener_key_store_password:
#    secret_alias: Axis2.Https.Listener.KeyStore.Password
#    secret_alias_value: repository/conf/axis2/axis2.xml//axisconfig/transportReceiver[@name='https']/parameter[@name='keystore']/KeyStore/Password,false
#    password: wso2carbon
#  axis2_https_listener_key_store_key_password:
#    secret_alias: Axis2.Https.Listener.KeyStore.KeyPassword
#    secret_alias_value: repository/conf/axis2/axis2.xml//axisconfig/transportReceiver[@name='https']/parameter[@name='keystore']/KeyStore/KeyPassword,false
#    password: wso2carbon
#  axis2_https_sender_trust_store_password:
#    secret_alias: Axis2.Https.Sender.TrustStore.Password
#    secret_alias_value: repository/conf/axis2/axis2.xml//axisconfig/transportSender[@name='https']/parameter[@name='truststore']/TrustStore/Password,false
#    password: wso2carbon
#  axis2_https_sender_key_store_password:
#    secret_alias: Axis2.Https.Sender.KeyStore.Password
#    secret_alias_value: repository/conf/axis2/axis2.xml//axisconfig/transportSender[@name='https']/parameter[@name='keystore']/KeyStore/Password,false
#    password: wso2carbon
#  axis2_https_sender_key_store_key_password:
#    secret_alias: Axis2.Https.Sender.KeyStore.KeyPassword
#    secret_alias_value: repository/conf/axis2/axis2.xml//axisconfig/transportSender[@name='https']/parameter[@name='keystore']/KeyStore/KeyPassword,false
#    password: wso2carbon
#  axis2_mailto_parameter_password:
#    secret_alias: Axis2.Mailto.Parameter.Password
#    secret_alias_value: repository/conf/axis2/axis2.xml//axisconfig/transportSender[@name='mailto']/parameter[@name='mail.smtp.password'],false
#    password: wso2carbon
